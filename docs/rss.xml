<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>咚东博客</title><link>https://trdong19.github.io</link><description>记录</description><copyright>咚东博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://raw.githubusercontent.com/trdong19/tuchuang/img/img/202405251724674.jpg</url><title>avatar</title><link>https://trdong19.github.io</link></image><lastBuildDate>Sat, 25 May 2024 16:03:22 +0000</lastBuildDate><managingEditor>咚东博客</managingEditor><ttl>60</ttl><webMaster>咚东博客</webMaster><item><title>解决 Github port 443 Timed out ----请确保已在 Git 中配置你的"user.name"和“user.email'，-----提交同步一直加载</title><link>https://trdong19.github.io/post/jie-jue-%20Github%20port%20443%20Timed%20out%20-----qing-que-bao-yi-zai-%20Git%20-zhong-pei-zhi-ni-de--user.name--he-%E2%80%9Cuser.email%27%EF%BC%8C------ti-jiao-tong-bu-yi-zhi-jia-zai.html</link><description>### 解决 Github port 443 Timed out&#13;
一、问题描述&#13;
如下图所示，无法 git clone 来自 Github 上的仓库，报端口 443 错误&#13;
![image](https://github.com/trdong19/trdong19.github.io/assets/84180727/08f9d52f-fd66-42e3-81c9-b99288dc9f26)&#13;
&#13;
二、问题分析&#13;
Git 所设端口与系统代理不一致，需重新设置&#13;
&#13;
三、解决方法&#13;
3-1、打开代理页面&#13;
打开 设置 --&gt; 网络与Internet --&gt; 查找代理&#13;
 &#13;
![image-1](https://github.com/trdong19/trdong19.github.io/assets/84180727/b7a62a98-cde4-42da-92cc-072a0216c178)&#13;
&#13;
动图&#13;
记录下当前系统代理的 IP 地址和端口号&#13;
&#13;
如上图所示，地址与端口号为：127.0.0.1:7890&#13;
&#13;
3-2、修改 Git 的网络设置&#13;
# 注意修改成自己的IP和端口号&#13;
&#13;
1. git config --global http.proxy http://127.0.0.1:7890 &#13;
2. git config --global https.proxy http://127.0.0.1:7890&#13;
&#13;
 &#13;
四、完结撒花&#13;
可以重新 clone 尝试了（其实主要解决的是为啥搭建了梯子依旧不好使的问题，哈哈哈）&#13;
&#13;
五、后记&#13;
当我们访问GitHub的时候一般都会使用梯子，所以往上推代码的时候也是需要梯子，没有梯子推送成功概率很低，一般都会报错超时，所以设置梯子提高访问成功率；&#13;
&#13;
取消代理是因为，访问 Gitee 或其它是不需要梯子，所以要取消代理；或者后悔设置代理了，也可以利用此取消&#13;
&#13;
# 取消代理&#13;
&#13;
1. git config --global --unset http.proxy&#13;
2. git config --global --unset https.proxy&#13;
&#13;
&#13;
&#13;
# 查看代理&#13;
&#13;
1. git config --global --get http.proxy&#13;
2. git config --global --get https.proxy&#13;
&#13;
&#13;
&#13;
### 请确保已在 Git 中配置你的"user.name"和“user.email'解决方法&#13;
&#13;
修改完项目代码，准备提交到git上，结果提交失败，弹框提示：请确保已在Git中配置您的“user.name”和“user.email”&#13;
打开终端Git Bash，配置运行一下命令&#13;
&#13;
1. $ git config --global user.name "your_username"  # 配置用户名&#13;
3. $ git config --global user.email "your_email"  # 配置邮箱&#13;
&#13;
以上是全局配置“user.name”和“user.email”的命令，如果想要配置单个项目git的“user.name”和“user.email”，打开终端Git Bash，进到该项目目录下，运行命令：&#13;
&#13;
1. $ git config user.name "your_username"&#13;
3. $ git config user.email "your_email"&#13;
&#13;
配置完，查看git中配置的用户名和邮箱，看看是否配置成功&#13;
&#13;
1. $ git config user.name&#13;
3. $ git config user.email&#13;
&#13;
&#13;
### 提交同步一直加载&#13;
解决办法是在你提交的时候填写一下提交信息。</description><guid isPermaLink="true">https://trdong19.github.io/post/jie-jue-%20Github%20port%20443%20Timed%20out%20-----qing-que-bao-yi-zai-%20Git%20-zhong-pei-zhi-ni-de--user.name--he-%E2%80%9Cuser.email%27%EF%BC%8C------ti-jiao-tong-bu-yi-zhi-jia-zai.html</guid><pubDate>Sun, 19 May 2024 15:09:37 +0000</pubDate></item><item><title>Docker安装wordpress并配置mysql数据库</title><link>https://trdong19.github.io/post/Docker-an-zhuang-wordpress-bing-pei-zhi-mysql-shu-ju-ku.html</link><description>一、拉取wordpress镜像(默认最新)&#13;
这一步和代理仓库有关，可能拉取时间偏久一点(出错时多拉取一次)&#13;
docker pull wordpress&#13;
![image](https://github.com/trdong19/trdong19.github.io/assets/84180727/b0ae217a-a9f0-4c6c-a7e6-53b27c7711fe)&#13;
&#13;
&#13;
二、启动wordpress容器&#13;
启动容器，设置容器名为mywordpress2并把80端口映射到宿主机的9999端口&#13;
docker run -it --name mywordpress2 -p 9999:80 -d wordpress&#13;
![image](https://github.com/trdong19/trdong19.github.io/assets/84180727/fa636b2f-9014-49b8-ab45-f85d5bb864ec)&#13;
&#13;
&#13;
要添加挂载硬盘，可以使用 -v 参数来指定挂载点。</description><guid isPermaLink="true">https://trdong19.github.io/post/Docker-an-zhuang-wordpress-bing-pei-zhi-mysql-shu-ju-ku.html</guid><pubDate>Sun, 19 May 2024 13:17:36 +0000</pubDate></item><item><title>docker 构建别人项目过程</title><link>https://trdong19.github.io/post/docker%20-gou-jian-bie-ren-xiang-mu-guo-cheng.html</link><description>先把项目源码下载下来：&#13;
![image](https://github.com/trdong19/trdong19.github.io/assets/84180727/1f0659e8-ce69-4d79-b857-4a40d64f09c4)&#13;
接在解压，进入目录找到Dockerfile文件所在目录位置，输入命令&#13;
docker build -t xxxx .  （‘xxxx’是构建项目的名称，'.'是Dockerfile文件在当前目录，如果不在需要换成所在目录的路程）。</description><guid isPermaLink="true">https://trdong19.github.io/post/docker%20-gou-jian-bie-ren-xiang-mu-guo-cheng.html</guid><pubDate>Sat, 18 May 2024 18:07:13 +0000</pubDate></item><item><title>ubuntu22.04中使用阿里云镜像站安装docker</title><link>https://trdong19.github.io/post/ubuntu22.04-zhong-shi-yong-a-li-yun-jing-xiang-zhan-an-zhuang-docker.html</link><description>安装一些依赖。</description><guid isPermaLink="true">https://trdong19.github.io/post/ubuntu22.04-zhong-shi-yong-a-li-yun-jing-xiang-zhan-an-zhuang-docker.html</guid><pubDate>Sat, 18 May 2024 17:02:20 +0000</pubDate></item><item><title>windows10系统直接官网下载</title><link>https://trdong19.github.io/post/windows10-xi-tong-zhi-jie-guan-wang-xia-zai.html</link><description>- 1.家庭版、专业、教育版的下载方法&#13;
- &#13;
- 打开微软下载系统官网。</description><guid isPermaLink="true">https://trdong19.github.io/post/windows10-xi-tong-zhi-jie-guan-wang-xia-zai.html</guid><pubDate>Wed, 08 May 2024 10:58:42 +0000</pubDate></item><item><title>Stable diffusion 个人使用记录</title><link>https://trdong19.github.io/post/Stable%20diffusion%20-ge-ren-shi-yong-ji-lu.html</link><description>室内室外模型&#13;
Realisticvision 2.0  (Ceckpoint) 顶级 &#13;
Delbertv 2.0   (Ceckpoint) &#13;
Lyriel v1.4&#13;
dvarchMultiPrompt  (Ceckpoint) &#13;
xsarchitectural (Ceckpoint)&#13;
&#13;
ccontrolnet室内室外设计插件&#13;
anny:可以从图片中提取细线&#13;
MLSD:可以从图片中检测直线&#13;
HED:可以从图片中提取边缘&#13;
SEG:通过语义分割识别物体&#13;
&#13;
文生图   &#13;
室内的一般：主体，风格，质量（例如：photo of a living room ,modern style, best quality)&#13;
负面词 ：（出现过的扭曲线条可以写上 twisted line）&#13;
&#13;
sd常用插件&#13;
hans   sd汉化&#13;
infinite-image-browsing  （无边图像浏览）&#13;
prompt-all-in-one （汉语自动翻译英文）&#13;
controlnet   （）&#13;
https://zhuanlan.zhihu.com/p/648204742（Stable diffusion30个必备插件推荐）&#13;
Stable Diffusion - ControlNet 控制模型安装与使用 （https://zhuanlan.zhihu.com/p/692537570）&#13;
。</description><guid isPermaLink="true">https://trdong19.github.io/post/Stable%20diffusion%20-ge-ren-shi-yong-ji-lu.html</guid><pubDate>Thu, 25 Apr 2024 14:31:13 +0000</pubDate></item><item><title>一些折腾过程中解决方法的记录</title><link>https://trdong19.github.io/post/yi-xie-zhe-teng-guo-cheng-zhong-jie-jue-fang-fa-de-ji-lu.html</link><description>- docker安装教程网站【[点击直达](https://docker-practice.github.io/zh-cn/install/ubuntu.html)】。</description><guid isPermaLink="true">https://trdong19.github.io/post/yi-xie-zhe-teng-guo-cheng-zhong-jie-jue-fang-fa-de-ji-lu.html</guid><pubDate>Thu, 18 Apr 2024 16:40:59 +0000</pubDate></item><item><title>warp换地区方法</title><link>https://trdong19.github.io/post/warp-huan-di-qu-fang-fa.html</link><description>密钥获取【[点击直达](https://replit.com/@zzzhhh11/YouTube-Ke-Ji-Gong-Xiang-warp-key-generator?v=1)】（没有账号记得注册）详细使用教程【[点击直达](https://kjgx668.blogspot.com/2024/01/2024warp2383pb-replit-wireguard.html)】&#13;
&#13;
密钥手机端通过电报获取教程【[点击直达](https://kjgx668.blogspot.com/2024/01/2024vpnwarpclashv2rayngwarpclashipv2ray.html)】&#13;
&#13;
&#13;
&#13;
NekoRay (Windows / Linux)【[点击直达](https://github.com/MatsuriDayo/nekoray/releases)】&#13;
电报下载需要翻墙！电脑优选IP软件【[点击直达](https://t.me/qiankejpd/428)】&#13;
warp文件，国内下载地(无需翻墙)【[点击直达](https://pan.xunlei.com/s/VNu77ORq455Q6bM6l0cOBd_YA1?pwd=mgdc#)】解压密码：0329&#13;
warp文件，电报下载需要翻墙！【[点击直达](https://t.me/qiankejpd/433)】&#13;
其他系统：iOS，安卓详细分流教程【[点击直达](https://kjgx668.blogspot.com/2023/07/warpvpnioswarpwindow-ioswarp_53.html)】&#13;
使用方法：&#13;
1.点击上方秘钥获取，获取warp+的key&#13;
2.使用warp文件的优选ip，获取到ip和端口&#13;
3.使用下面代码，：&#13;
&#13;
warp -b 0.0.0.0:端口号随意填写 -e 优选ip:端口号 -k g8lG9B50-Ge346l2I-5FeYv182 -country 国家代码 -cfon&#13;
warp -b 0.0.0.0:3213 -e 162.159.195.119:859  -k g8lG9B50-Ge346l2I-5FeYv182 -country US -cfon&#13;
&#13;
&#13;
IP查询【[点击直达](https://ip.gs/)】&#13;
&#13;
&#13;
&#13;
国家地区缩写：【[点击直达](https://www.chinassl.net/ssltools/country-code.html)】按Ctrl+C 结束运行&#13;
&#13;
奥地利 (Austria): AT&#13;
&#13;
比利时 (Belgium): BE&#13;
&#13;
保加利亚 (Bulgaria): BG&#13;
&#13;
巴西 (Brazil): BR&#13;
&#13;
加拿大 (Canada): CA&#13;
&#13;
瑞士 (Switzerland): CH&#13;
&#13;
捷克共和国 (Czech Republic): CZ&#13;
&#13;
德国 (Germany): DE&#13;
&#13;
丹麦 (Denmark): DK&#13;
&#13;
爱沙尼亚 (Estonia): EE&#13;
&#13;
西班牙 (Spain): ES&#13;
&#13;
芬兰 (Finland): FI&#13;
&#13;
法国 (France): FR&#13;
&#13;
英国 (United Kingdom): GB&#13;
&#13;
匈牙利 (Hungary): HU&#13;
&#13;
爱尔兰 (Ireland): IE&#13;
&#13;
印度 (India): IN&#13;
&#13;
意大利 (Italy): IT&#13;
&#13;
日本 (Japan): JP&#13;
&#13;
拉脱维亚 (Latvia): LV&#13;
&#13;
荷兰 (Netherlands): NL&#13;
&#13;
挪威 (Norway): NO&#13;
&#13;
波兰 (Poland): PL&#13;
&#13;
罗马尼亚 (Romania): RO&#13;
&#13;
塞尔维亚 (Serbia): RS&#13;
&#13;
瑞典 (Sweden): SE&#13;
&#13;
新加坡 (Singapore): SG&#13;
&#13;
斯洛伐克 (Slovakia): SK&#13;
&#13;
乌克兰 (Ukraine): UA&#13;
&#13;
美国 (United States): US。</description><guid isPermaLink="true">https://trdong19.github.io/post/warp-huan-di-qu-fang-fa.html</guid><pubDate>Thu, 18 Apr 2024 12:56:36 +0000</pubDate></item><item><title>华为、H3C、锐捷、思科四大设备交换机配置命令总结</title><link>https://trdong19.github.io/post/hua-wei-%E3%80%81H3C%E3%80%81-rui-jie-%E3%80%81-si-ke-si-da-she-bei-jiao-huan-ji-pei-zhi-ming-ling-zong-jie.html</link><description>**一、华为交换机基础配置命令&#13;
&#13;
1、创建vlan：&#13;
&#13;
&lt;Quidway&gt; //用户视图，也就是在Quidway模式下运行命令。</description><guid isPermaLink="true">https://trdong19.github.io/post/hua-wei-%E3%80%81H3C%E3%80%81-rui-jie-%E3%80%81-si-ke-si-da-she-bei-jiao-huan-ji-pei-zhi-ming-ling-zong-jie.html</guid><pubDate>Sun, 14 Apr 2024 13:08:37 +0000</pubDate></item><item><title>第一篇测试</title><link>https://trdong19.github.io/post/di-yi-pian-ce-shi.html</link><description>测试。</description><guid isPermaLink="true">https://trdong19.github.io/post/di-yi-pian-ce-shi.html</guid><pubDate>Fri, 29 Mar 2024 02:08:26 +0000</pubDate></item></channel></rss>